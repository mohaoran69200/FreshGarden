security:
    # Hashage des mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Gestion des providers d'utilisateurs
    providers:
        # Utilisateur principal
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Configuration des firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            # Configuration de la connexion par formulaire
            form_login:
                login_path: login
                check_path: login
                enable_csrf: true

            # Déconnexion
            logout:
                path: logout
                # Redirection après déconnexion
                target: home  # Remplace 'app_home' par la route que tu souhaites après déconnexion

            # Utilisation du UserChecker pour vérifier si un utilisateur est banni
            user_checker: App\Security\UserChecker

    # Contrôle d'accès : restreindre l'accès à certaines routes
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }  # Accès réservé aux admins pour les pages admin
        - { path: ^/profile, roles: ROLE_USER } # Accès réservé aux utilisateurs authentifiés pour les profils

# Configuration spécifique pour l'environnement de test
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Valeur la plus basse pour bcrypt
                time_cost: 3 # Valeur la plus basse pour argon
                memory_cost: 10 # Valeur la plus basse pour argon
